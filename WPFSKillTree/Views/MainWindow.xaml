<controls:MetroWindow
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:POESKillTree.Localization.XAML"
        xmlns:local="clr-namespace:POESKillTree.Controls"
        xmlns:conv ="clr-namespace:POESKillTree.ViewModels"
        xmlns:items="clr-namespace:POESKillTree.Model.Items"
        xmlns:dialogs="clr-namespace:POESKillTree.Controls.Dialogs"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:builds="clr-namespace:POESKillTree.Views.Builds"
        xmlns:equipment="clr-namespace:POESKillTree.Views.Equipment"
        xmlns:dd="urn:gong-wpf-dragdrop"

        mc:Ignorable="d" x:Class="POESKillTree.Views.MainWindow"
        Height="667" Width="1200" SizeChanged="Window_SizeChanged" 
        Closing="Window_Closing" Icon="/POESKillTree;component/logo.ico" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen"
        PreviewKeyDown="Window_PreviewKeyDown" PreviewKeyUp="Window_PreviewKeyUp"
        TextOptions.TextFormattingMode="Display"
        x:Name="window" SaveWindowPosition="True"
        DataContext="{Binding ElementName=window}"
        UseLayoutRounding="True">
    <controls:MetroWindow.Title>
        <MultiBinding StringFormat="{}{0} - {1}">
            <Binding Path="PersistentData.CurrentBuild.Name" ElementName="window" />
            <Binding Path="MainWindowTitle" ElementName="window" />
        </MultiBinding>
    </controls:MetroWindow.Title>

    <Window.Resources>
        <conv:AttributeToTextblockConverter x:Key="attributeToTextblockConverter" />
        <Style x:Key="ContainerStyleIsExpanded" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Expander Header="{Binding Name}" IsExpanded="{Binding Name.IsExpanded}" FontSize="12" Width="370">
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopRowExpander" TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
            <Setter Property="Margin" Value="0 -30 0 0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="ExpandDirection" Value="Down" />
            <Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
            <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="16" />
        </Style>
    </Window.Resources>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <!-- Making it a disabled button is a lazy way for not having to style it manually. -->
            <Button x:Name="TitleStatusButton" IsEnabled="False" Visibility="Hidden">
                <StackPanel Orientation="Horizontal">
                    <controls:ProgressRing Width="10" IsActive="True" Foreground="{Binding Foreground, ElementName=TitleStatusTextBlock}" />
                    <TextBlock x:Name="TitleStatusTextBlock" Margin="4 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S"
                    Command="{Binding BuildsControlViewModel.SaveBuildCommand}"
                    CommandParameter="{Binding BuildsControlViewModel.CurrentBuild}"/>
        <KeyBinding Modifiers="Control+Shift" Key="S"
                    Command="{Binding BuildsControlViewModel.SaveAllBuildsCommand}"/>
        <KeyBinding Modifiers="Control+Alt" Key="S"
                    Command="{Binding BuildsControlViewModel.SaveBuildAsCommand}"
                    CommandParameter="{Binding BuildsControlViewModel.CurrentBuild}"/>
        <KeyBinding Modifiers="Control" Key="N"
                    Command="{Binding BuildsControlViewModel.NewBuildCommand}"
                    CommandParameter="{Binding BuildsControlViewModel.BuildRoot}"/>
        
        <KeyBinding Modifiers="Control+Shift" Key="G"
                    Command="{Binding TreeGeneratorInteraction.OpenTreeGeneratorCommand}" />
        <KeyBinding Modifiers="Control+Shift" Key="T"
                    Command="{Binding TreeGeneratorInteraction.RunTaggedNodesCommand}" />
        <KeyBinding Modifiers="Control+Shift" Key="A"
                    Command="{Binding TreeGeneratorInteraction.RunAdvancedCommand}" />
    </Window.InputBindings>

    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="31"/>
            <RowDefinition Height="31"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!-- grid row 0 - upper part-->
        <Menu IsMainMenu="True" x:Name="menu1" Grid.Row="0" Margin="0,0,0,2"
             dialogs:DialogParticipation.Register="{Binding PersistentData}">
            <MenuItem>
                <MenuItem.Header>
                    <l:Catalog Message="_File" />
                </MenuItem.Header>
                <MenuItem InputGestureText="Ctrl+N"
                          Command="{Binding BuildsControlViewModel.NewBuildCommand}"
                          CommandParameter="{Binding BuildsControlViewModel.BuildRoot}">
                    <MenuItem.Header>
                        <l:Catalog Message="_New" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="PageNew" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem InputGestureText="Ctrl+S"
                          Command="{Binding BuildsControlViewModel.SaveBuildCommand}"
                          CommandParameter="{Binding BuildsControlViewModel.CurrentBuild}">
                    <MenuItem.Header>
                        <AccessText>
                            <Binding Path="BuildsControlViewModel.CurrentBuild.Build.Name">
                                <Binding.StringFormat>
                                    <l:Catalog>_Save {0}</l:Catalog>
                                </Binding.StringFormat>
                            </Binding>
                        </AccessText>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Save" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem InputGestureText="Ctrl+Alt+S"
                          Command="{Binding BuildsControlViewModel.SaveBuildAsCommand}"
                          CommandParameter="{Binding BuildsControlViewModel.CurrentBuild}">
                    <MenuItem.Header>
                        <AccessText>
                            <Binding Path="BuildsControlViewModel.CurrentBuild.Build.Name">
                                <Binding.StringFormat>
                                    <l:Catalog>Save {0} _As…</l:Catalog>
                                </Binding.StringFormat>
                            </Binding>
                        </AccessText>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem InputGestureText="Ctrl+Shift+S"
                          Command="{Binding BuildsControlViewModel.SaveAllBuildsCommand}">
                    <MenuItem.Header>
                        <l:Catalog Message="Save A_ll" />
                    </MenuItem.Header>
                </MenuItem>
                <Separator/>
                <MenuItem Command="{Binding BuildsControlViewModel.ExportCurrentToClipboardCommand}">
                    <MenuItem.Header>
                        <AccessText>
                            <Binding Path="BuildsControlViewModel.CurrentBuild.Build.Name">
                                <Binding.StringFormat>
                                    <l:Catalog Message="Export {0} to clipboard" />
                                </Binding.StringFormat>
                            </Binding>
                        </AccessText>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{Binding BuildsControlViewModel.ImportCurrentFromClipboardCommand}">
                    <MenuItem.Header>
                        <l:Catalog Message="Import build from clipboard" />
                    </MenuItem.Header>
                </MenuItem>
                <Separator/>
                <MenuItem Command="{Binding BuildsControlViewModel.ReloadCommand}">
                    <MenuItem.Header>
                        <l:Catalog Message="Reload builds from filesystem" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="RefreshClockwiseDown" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding BuildsControlViewModel.OpenBuildsSavePathCommand}">
                    <MenuItem.Header>
                        <l:Catalog>Open build directory</l:Catalog>
                    </MenuItem.Header>
                    <MenuItem.ToolTip>
                        <l:Catalog Message="Opens the directory your builds are saved to so you can share those builds.&#x0a;The directory can be changed in the settings." />
                    </MenuItem.ToolTip>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="FolderOpen" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Click="Menu_Exit"
                          InputGestureText="Alt+F4">
                    <MenuItem.Header>
                        <l:Catalog Message="E_xit" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Close" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <l:Catalog Message="_Edit" />
                </MenuItem.Header>
                <MenuItem Click="Menu_OpenSettings">
                    <MenuItem.Header>
                        <l:Catalog Message="Settings…" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Settings" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="mnuUndo" InputGestureText="Ctrl+Z" Click="tbSkillURL_Undo_Click">
                    <MenuItem.Header>
                        <l:Catalog Message="_Undo" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Undo" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="mnuRedo" InputGestureText="Ctrl+Y" Click="tbSkillURL_Redo_Click">
                    <MenuItem.Header>
                        <l:Catalog Message="_Redo" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Redo" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem InputGestureText="Ctrl+R" Click="btnReset_Click">
                    <MenuItem.Header>
                        <l:Catalog Message="Reset Skill _Tree" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Reset" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Click="Menu_CopyStats">
                    <MenuItem.Header>
                        <l:Catalog Message="Copy _Passive Attributes to Clipboard"/>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="ClipboardPaste" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem InputGestureText="Ctrl+E" Click="btnPoeUrl_Click" IsEnabled="{Binding NoAsyncTaskRunning, ElementName=window}">
                    <MenuItem.Header>
                        <l:Catalog Message="Copy Po_EUrl of Skill tree to Clipboard" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="ClipboardPaste" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <l:Catalog Message="_View" />
                </MenuItem.Header>
                <MenuItem>
                    <MenuItem.Header>
                        <l:Catalog Message="_Theme" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="DrawBrush" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                    <MenuItem x:Name="mnuViewThemeLight" local:MenuItemExtensions.GroupName="ThemeGroup" IsCheckable="True" Tag="Light" Click="mnuSetTheme_Click">
                        <MenuItem.Header>
                            <l:Catalog Message="Light" Context="color" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewThemeDark" local:MenuItemExtensions.GroupName="ThemeGroup" IsCheckable="True" Tag="Dark" Click="mnuSetTheme_Click">
                        <MenuItem.Header>
                            <l:Catalog Message="Dark" Context="color" />
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <l:Catalog Message="Acce_nt" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="DrawBrush" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                    <MenuItem x:Name="mnuViewAccentAmber" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Amber" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Amber"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentBlue" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Blue" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Blue"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentBrown" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Brown" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Brown"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentCobalt" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Cobalt" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Cobalt"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentCrimson" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Crimson" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Crimson"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentCyan" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Cyan" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Cyan"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentEmerald" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Emerald" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Emerald"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentGreen" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Green" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Green"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentIndigo" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Indigo" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Indigo"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentLime" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Lime" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Lime"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentMagenta" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Magenta" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Magenta"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentMauve" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Mauve" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Mauve"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentOlive" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Olive" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Olive"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentOrange" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Orange" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Orange"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentPink" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Pink" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Pink"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentPurple" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Purple" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Purple"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentRed" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Red" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Red"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentSienna" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Sienna" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Sienna"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentSteel" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Steel" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Steel"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentTaupe" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Taupe" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Taupe"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentTeal" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Teal" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Teal"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentViolet" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Violet" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Violet"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="mnuViewAccentYellow" local:MenuItemExtensions.GroupName="AccentGroup" IsCheckable="True" Tag="Yellow" Click="mnuSetAccent_Click" >
                        <MenuItem.Header>
                            <l:Catalog Context="color" Message="Yellow"/>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem x:Name="mnuViewBuilds" InputGestureText="Ctrl+B" IsCheckable="true" IsChecked="{Binding PersistentData.Options.BuildsBarOpened,ElementName=window, Mode=TwoWay}">
                    <MenuItem.Header>
                        <l:Catalog Message="Saved _Builds" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem x:Name="mnuViewAttributes" InputGestureText="Ctrl+Q" IsCheckable="true"
                          IsChecked="{Binding PersistentData.Options.AttributesBarOpened,ElementName=window, Mode=TwoWay}">
                    <MenuItem.Header>
                        <l:Catalog Message="_Attributes" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem x:Name="mnuViewCharacterSheet" InputGestureText="Ctrl+Shift+Q" IsCheckable="true"
                          IsChecked="{Binding PersistentData.Options.CharacterSheetBarOpened,ElementName=window, Mode=TwoWay}">
                    <MenuItem.Header>
                        <l:Catalog Message="_Character Sheet" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem x:Name="mnuViewComparison" IsCheckable="true"
                          IsChecked="{Binding PersistentData.Options.TreeComparisonEnabled,ElementName=window, Mode=TwoWay}">
                    <MenuItem.Header>
                        <l:Catalog Message="Skill _Tree Comparison" />
                    </MenuItem.Header>
                </MenuItem>
                <Separator/>
                <MenuItem Command="{Binding BuildsControlViewModel.ExpandAllCommand}">
                    <MenuItem.Header>
                        <l:Catalog>Expand all build folders</l:Catalog>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="SectionExpandAll" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding BuildsControlViewModel.CollapseAllCommand}">
                    <MenuItem.Header>
                        <l:Catalog>Collapse all build folders</l:Catalog>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="SectionCollapseAll" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem x:Name="mnuShowSummary" IsCheckable="true"
                          IsChecked="{Binding PersistentData.Options.ChangeSummaryEnabled,ElementName=window, Mode=TwoWay}"
                          InputGestureText="Ctrl+G">
                    <MenuItem.Header>
                        <l:Catalog Message="Show summary of changes" />
                    </MenuItem.Header>
                    <MenuItem.ToolTip>
                        <l:Catalog>Shows a summary of the total changes to the passive tree when hovering over a node.</l:Catalog>
                    </MenuItem.ToolTip>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <l:Catalog Message="_Tools" />
                </MenuItem.Header>
                <MenuItem Click="Menu_ScreenShot">
                    <MenuItem.Header>
                        <l:Catalog Message="Take _Screenshot of Skilled Nodes…" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Camera" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Click="Menu_ImportItems">
                    <MenuItem.Header>
                        <l:Catalog Message="_Download &amp; Import Items…"/>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="CloudDownload" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="Menu_ImportStash">
                    <MenuItem.Header>
                        <l:Catalog Message="_Download &amp; Import Stash…"/>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="CloudDownload" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Click="Menu_RedownloadTreeAssets">
                    <MenuItem.Header>
                        <l:Catalog Message="_Redownload Live Skill Tree Data" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="PageDownload" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="Menu_ItemFilterEditor">
                    <MenuItem.Header>
                        <l:Catalog Message="Item _Filter Editor" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Filter" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <l:Catalog Message="_Nodes"/>
                </MenuItem.Header>
                <MenuItem Command="{Binding TreeGeneratorInteraction.OpenTreeGeneratorCommand}"
                          InputGestureText="Ctrl+Shift+G">
                    <MenuItem.Header>
                        <l:Catalog Message="_Skill Tree Generator…" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{Binding TreeGeneratorInteraction.RunTaggedNodesCommand}"
                          InputGestureText="Ctrl+Shift+T"
                          dialogs:DialogParticipation.Register="{Binding TreeGeneratorInteraction}">
                    <MenuItem.Header>
                        <l:Catalog Message="Run 'Tagged _Nodes' generator" />
                    </MenuItem.Header>
                    <MenuItem.ToolTip>
                        <l:Catalog>Runs the 'Tagged Nodes' generator with the current settings set in the Skill Tree
                            Generator window.</l:Catalog>
                    </MenuItem.ToolTip>
                </MenuItem>
                <MenuItem Command="{Binding TreeGeneratorInteraction.RunAdvancedCommand}"
                          InputGestureText="Ctrl+Shift+A">
                    <MenuItem.Header>
                        <l:Catalog Message="Run '_Advanced' generator" />
                    </MenuItem.Header>
                    <MenuItem.ToolTip>
                        <l:Catalog>Runs the 'Advanced' generator with the current settings set in the Skill Tree
                            Generator window.</l:Catalog>
                    </MenuItem.ToolTip>
                </MenuItem>
                <Separator />
                <MenuItem Click="Menu_UntagAllNodes">
                    <MenuItem.Header>
                        <l:Catalog Message="Un_tag All Nodes" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Click="Menu_UnhighlightAllNodes">
                    <MenuItem.Header>
                        <l:Catalog Message="_Unhighlight All Nodes" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Click="Menu_CheckAllHighlightedNodes">
                    <MenuItem.Header>
                        <l:Catalog Message="_Check-tag highlighted Nodes" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Click="Menu_CrossAllHighlightedNodes">
                    <MenuItem.Header>
                        <l:Catalog Message="C_ross-tag highlighted Nodes" />
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <l:Catalog Message="_Help" />
                </MenuItem.Header>
                <MenuItem>
                    <MenuItem.Header>
                        <l:Catalog Message="_Links" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Globe" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                    <MenuItem Click="Menu_OpenPoEWebsite">
                        <MenuItem.Header>
                            <l:Catalog Message="_Path of Exile Website" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Click="Menu_OpenWiki">
                        <MenuItem.Header>
                            <l:Catalog Message="Path of Exile _Wiki" />
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Click="Menu_OpenHelp">
                    <MenuItem.Header>
                        <l:Catalog Message="View _Help" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Question" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="Menu_OpenHotkeys">
                    <MenuItem.Header>
                        <l:Catalog Message="Hot_keys" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="InputKeyboard" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="Menu_CheckForUpdates" IsEnabled="{Binding NoAsyncTaskRunning, ElementName=window}">
                    <MenuItem.Header>
                        <l:Catalog Message="Check for _Updates" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Refresh" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Click="Menu_OpenAbout">
                    <MenuItem.Header>
                        <l:Catalog Message="_About PoESkillTree" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <iconPacks:PackIconModern Kind="Information" HorizontalAlignment="Center" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <TabControl Grid.Row="0" HorizontalAlignment="Right">
            <TabItem controls:ControlsHelper.HeaderFontSize="14"
                     IsSelected="{Binding IsSelected, ElementName= tyPassiveTree}">
                <TabItem.Header>
                    <l:Catalog Message="Skill Tree"/>
                </TabItem.Header>
            </TabItem>
            <TabItem controls:ControlsHelper.HeaderFontSize="14"
                     IsSelected="{Binding IsSelected, ElementName= tyEquipment}">
                <TabItem.Header>
                    <l:Catalog Message="Equipment"/>
                </TabItem.Header>
            </TabItem>
        </TabControl>

        <!-- grid row 1 - attirbutes, buttons, saved builds-->
        <Grid x:Name="BtnGrid" Grid.Row="1" HorizontalAlignment="Stretch" Panel.ZIndex="99" VerticalAlignment="Center">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="100*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Column="1">
                    <ToggleButton x:Name="BanditToggle" Width="50">
                        <l:Catalog Message="Bandits" />
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, ElementName=BanditToggle}" StaysOpen="False" Placement="Bottom" HorizontalOffset="-100" VerticalOffset="5">
                        <Border Background="{DynamicResource WhiteColorBrush}" BorderThickness="1"
                                BorderBrush="{DynamicResource AccentColorBrush}">
                            <local:BanditSelection DataContext="{Binding PersistentData.CurrentBuild.Bandits}" Margin="5" />
                        </Border>
                    </Popup>
                    <controls:NumericUpDown Margin="5,0,0,0" x:Name="LevelUpDown" ValueChanged="Level_ValueChanged" MinWidth="70"
                                            Height="{Binding ActualHeight, ElementName=cbCharType}"
                                            DataContext="{Binding Tree, ElementName=window}" Value="{Binding Level, ValidatesOnDataErrors=True}"
                                            Minimum="{Binding UndefinedLevel}" Maximum="{Binding MaximumLevel}"
                                            HasDecimals="False">
                        <controls:NumericUpDown.ToolTip>
                            <l:Catalog Message="Level"/>
                        </controls:NumericUpDown.ToolTip>
                    </controls:NumericUpDown>
                    <ComboBox Margin="5,0,0,0" x:Name="cbCharType" Width="100" SelectionChanged="cbCharType_SelectionChanged" PreviewMouseDown="userInteraction_PreviewMouseDown"/>
                    <ComboBox Margin="5,0,0,0" x:Name="cbAscType" Width="100" SelectionChanged="cbAscType_SelectionChanged" PreviewMouseDown="userInteraction_PreviewMouseDown"/>
                    <Label Content="0" Margin="8,0,0,0" x:Name="NormalUsedPoints" FontSize="14">
                        <Label.ToolTip>
                            <l:Catalog Message="Used Passive Skill Points"/>
                        </Label.ToolTip>
                    </Label>
                    <Label Content="[0]" Margin="-5,0,0,0" x:Name="AscendancyUsedPoints" FontSize="14">
                        <Label.ToolTip>
                            <l:Catalog Message="Used Ascendancy Skill Points"/>
                        </Label.ToolTip>
                    </Label>
                    <Label Content="/" Margin="-5,0,-5,0" Opacity="0.5" FontSize="14"/>
                    <Label Content="123" Margin="0,0,0,0" x:Name="NormalTotalPoints" Opacity="0.50" FontSize="14"
                           Width="34" HorizontalContentAlignment="Right">
                        <Label.ToolTip>
                            <l:Catalog Message="Total Passive Skill Points"/>
                        </Label.ToolTip>
                    </Label>
                    <Label Content="[6]" Margin="-5,0,0,0" x:Name="AscendancyTotalPoints" Opacity="0.50" FontSize="14">
                        <Label.ToolTip>
                            <l:Catalog Message="Total Ascendancy Skill Points"/>
                        </Label.ToolTip>
                    </Label>
                    <Button x:Name="btnReset" Click="btnReset_Click" Margin="10,0,0,0" Content="{l:Catalog Message=Reset}"/>
                </StackPanel>
            </Grid>
        </Grid>

        <!-- grid row 2 - center part, tree and editors -->
        <Grid Grid.Row="2">
            <TabControl Background="Transparent" Name="tcMainArea"
                        dd:DragDrop.IsDropTarget="True">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem">
                        <Style.Setters>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Style.Setters>
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabItem IsSelected="True" Name="tyPassiveTree">
                    <local:ZoomBorder IsManipulationEnabled="True" x:Name="zbSkillTreeBackground" ClipToBounds="True" MouseMove="zbSkillTreeBackground_MouseMove" Click="zbSkillTreeBackground_Click" Background="Black" MouseLeave="zbSkillTreeBackground_MouseLeave" Margin="0,0,0,0" Focusable="True" PreviewMouseUp="zbSkillTreeBackground_PreviewMouseUp">
                        <Rectangle Height="500" Width="597" IsManipulationEnabled="True" x:Name="recSkillTree" Stretch="Fill"  ClipToBounds="True" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </local:ZoomBorder>
                </TabItem>
                <TabItem Name="tyEquipment">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Disabled">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                                       Height="2" Fill="{DynamicResource GrayNormalBrush}" VerticalAlignment="Top" />

                            <UniformGrid Grid.Column="0" Grid.Row="0"
                                         Margin="0 6 18 0"
                                         Height="32" Width="480"
                                         Rows="1"
                                         HorizontalAlignment="Right">
                                <Button Margin="4 0"
                                        Click="Menu_ImportItems">
                                    <l:Catalog>Import Items</l:Catalog>
                                </Button>
                                <Button Margin="4 0"
                                        Click="Menu_ImportStash">
                                    <l:Catalog>Import Stash</l:Catalog>
                                </Button>
                                <Button Margin="4 0"
                                        Click="Button_CraftUnique_Click">
                                    <l:Catalog Message="Craft new unique"/>
                                </Button>
                                <Button Margin="4 0"
                                        Click="Button_Craft_Click">
                                    <l:Catalog Message="Craft new item"/>
                                </Button>
                            </UniformGrid>

                            <equipment:InventoryView Grid.Column="0" Grid.Row="1"
                                                     HorizontalAlignment="Right" VerticalAlignment="Top"
                                                     Margin="20 0"
                                                     DataContext="{Binding InventoryViewModel, ElementName=window}"/>
                            <equipment:StashView Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                                                 HorizontalAlignment="Left" Margin="0,4,0,0"
                                                 DataContext="{Binding StashViewModel, ElementName=window}" />
                        </Grid>
                    </ScrollViewer>
                </TabItem>
            </TabControl>

            <Expander Style="{StaticResource TopRowExpander}" HorizontalAlignment="Right" FlowDirection="RightToLeft" IsExpanded="{Binding IsChecked,ElementName=mnuViewBuilds}">
                <Expander.Header>
                    <l:Catalog Message="Saved Builds"/>
                </Expander.Header>

                <builds:BuildsControl FlowDirection="LeftToRight"
                                      DataContext="{Binding ElementName=window, Path=BuildsControlViewModel}" />
            </Expander>

            <Expander Style="{StaticResource TopRowExpander}"
                      IsExpanded="{Binding IsChecked,ElementName=mnuViewAttributes}"
                      Expanded="expAttributes_Expanded" MouseLeave="expAttributes_MouseLeave">
                <Expander.Header>
                    <l:Catalog Message="Attributes"/>
                </Expander.Header>
                <Grid Background="{DynamicResource WhiteColorBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" x:Name="gAttributesFilter">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="26" x:Name="tbAttributesFilter" Margin="5,0,0,0" Grid.Column="0" TextChanged="tbAttributesFilter_TextChanged"
                                 controls:TextBoxHelper.SelectAllOnFocus="True"
                                 controls:TextBoxHelper.ClearTextButton="True">
                            <controls:TextBoxHelper.Watermark><l:Catalog>Filter</l:Catalog></controls:TextBoxHelper.Watermark>
                        </TextBox>
                        <CheckBox Grid.Column="1" Content="RegEx" Height="28" HorizontalAlignment="Left" Margin="5,0,5,0" x:Name="cbAttributesFilterRegEx" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Click="cbAttributesFilterRegEx_Click" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <TabControl Margin="0" x:Name="tabControl1" HorizontalAlignment="Left" Width="410" controls:TabControlHelper.IsUnderlined="True" Focusable="True" SelectionChanged="tabControl1_SelectionChanged">
                            <TabItem Margin="0" x:Name="tabItem1" controls:ControlsHelper.HeaderFontSize="15">
                                <TabItem.Header>
                                    <l:Catalog Message="Passive Attributes"/>
                                </TabItem.Header>
                                <Grid ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                    <ListBox ScrollViewer.CanContentScroll="False" Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" HorizontalAlignment="Center" x:Name="lbAttr" VerticalAlignment="Top" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" ItemsSource="{Binding}" ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Converter={StaticResource attributeToTextblockConverter}}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource ContainerStyleIsExpanded}" />
                                        </ListBox.GroupStyle>
                                    </ListBox>
                                </Grid>
                            </TabItem>
                            <TabItem Margin="0" x:Name="tabItem2" controls:ControlsHelper.HeaderFontSize="15">
                                <TabItem.Header>
                                    <l:Catalog Message="Item Attributes"/>
                                </TabItem.Header>
                                <Grid>
                                    <ListBox ScrollViewer.CanContentScroll="False"  ItemsSource="{Binding ItemAttributes.Attributes, ElementName=window, Mode=OneWay}"  Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" x:Name="lbItemAttr" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type items:ItemAttributes+Attribute}">
                                                <StackPanel>
                                                    <TextBlock><Run Text="{Binding ValuedAttribute, Mode=OneWay}" /><Run Text=" " /></TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource ContainerStyleIsExpanded}" />
                                        </ListBox.GroupStyle>
                                    </ListBox>
                                </Grid>
                            </TabItem>
                            <TabItem Margin="0" x:Name="tabItem3" controls:ControlsHelper.HeaderFontSize="15">
                                <TabItem.Header>
                                    <l:Catalog Message="Total Attributes"/>
                                </TabItem.Header>
                                <Grid>
                                    <ListBox ScrollViewer.CanContentScroll="False" Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" x:Name="lbAllAttr" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Text}" TextWrapping="Wrap"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource ContainerStyleIsExpanded}" />
                                        </ListBox.GroupStyle>
                                    </ListBox>
                                </Grid>
                            </TabItem>
                            <TabItem Margin="0" x:Name="tabItem4" controls:ControlsHelper.HeaderFontSize="15">
                                <TabItem.Header>
                                    <l:Catalog Message="ItemList" />
                                </TabItem.Header>
                                <Grid>
                                    <ListBox ScrollViewer.CanContentScroll="False"  ItemsSource="{Binding ItemAttributes.Equip, ElementName=window, Mode=OneWay}" Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" x:Name="lbItemList" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="items:Item">
                                                <local:ItemTooltip DataContext="{Binding}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource ContainerStyleIsExpanded}" />
                                        </ListBox.GroupStyle>
                                    </ListBox>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </Grid>
            </Expander>

            <Expander Style="{StaticResource TopRowExpander}"
                      IsExpanded="{Binding IsChecked,ElementName=mnuViewCharacterSheet}"
                      Expanded="expCharacterSheet_Expanded"
                      Background="{x:Null}"
                      controls:GroupBoxHelper.HeaderForeground="{DynamicResource BlackColorBrush}">
                <controls:ExpanderHelper.HeaderDownStyle>
                    <Style TargetType="{x:Type ToggleButton}"
                           BasedOn="{StaticResource ExpanderDownHeaderStyle}">
                        <Style.Setters>
                            <Setter Property="Margin" Value="108 4 4 4" />
                        </Style.Setters>
                    </Style>
                </controls:ExpanderHelper.HeaderDownStyle>
                <controls:ExpanderHelper.HeaderUpStyle>
                    <Style TargetType="{x:Type ToggleButton}"
                           BasedOn="{StaticResource ExpanderUpHeaderStyle}">
                        <Style.Setters>
                            <Setter Property="Margin" Value="108 4 4 4" />
                        </Style.Setters>
                    </Style>
                </controls:ExpanderHelper.HeaderUpStyle>
                <Expander.Header>
                    <l:Catalog Message="Character Sheet"/>
                </Expander.Header>
                <Grid Background="{DynamicResource WhiteColorBrush}">
                    <TabControl x:Name="tabControlSheet" HorizontalAlignment="Left" Width="410" Margin="1,0,0,0" controls:TabControlHelper.IsUnderlined="True" Focusable="True">
                        <TabItem Margin="0" x:Name="tabItemDefence" controls:ControlsHelper.HeaderFontSize="15">
                            <TabItem.Header>
                                <l:Catalog Message="Defense"/>
                            </TabItem.Header>
                            <Grid ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                <ListBox ScrollViewer.CanContentScroll="False" Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" x:Name="listBoxDefence" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Text}" TextWrapping="Wrap"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.GroupStyle>
                                        <GroupStyle ContainerStyle="{StaticResource ContainerStyleIsExpanded}" />
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </Grid>
                        </TabItem>
                        <TabItem Margin="0" x:Name="tabItemOffence" controls:ControlsHelper.HeaderFontSize="15">
                            <TabItem.Header>
                                <l:Catalog Message="Offense"/>
                            </TabItem.Header>
                            <Grid ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                <ListBox ScrollViewer.CanContentScroll="False" Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}" x:Name="listBoxOffence" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Text}" TextWrapping="Wrap"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.GroupStyle>
                                        <GroupStyle ContainerStyle="{StaticResource ContainerStyleIsExpanded}" />
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Expander>

        </Grid>

        <!-- grid row 3 - bottom part, search and tree -->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="35"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" controls:TextBoxHelper.ClearTextButton="True" Height="24" HorizontalAlignment="Left" Margin="5,1,1,2" x:Name="tbSearch" VerticalAlignment="Bottom" Width="334" TextChanged="tbSearch_TextChanged">
                <controls:TextBoxHelper.Watermark>
                    <l:Catalog>Search</l:Catalog>
                </controls:TextBoxHelper.Watermark>
            </TextBox>
            <CheckBox Grid.Column="1" Content="RegEx" Height="28" HorizontalAlignment="Left" Margin="1" x:Name="cbRegEx" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Click="cbRegEx_Click" />

            <TextBox Grid.Column="3" Height="24" Margin="1,0,2.854,2" VerticalAlignment="Bottom"
                     Text="{Binding InputTreeUrl, UpdateSourceTrigger=PropertyChanged}"
                     VerticalContentAlignment="Center" TextChanged="tbSkillURL_TextChanged"
                     controls:TextBoxHelper.SelectAllOnFocus="True">
                <TextBox.ToolTip>
                    <l:Catalog Message="Skill tree link"/>
                </TextBox.ToolTip>
                <controls:TextBoxHelper.Watermark>
                    <l:Catalog Message="Skill tree link"/>
                </controls:TextBoxHelper.Watermark>
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter"
                                Command="{Binding LoadTreeButtonViewModel.SelectedItem.Command}" />
                </TextBox.InputBindings>
            </TextBox>

            <controls:SplitButton Grid.Column="4" Height="24" HorizontalAlignment="Center" VerticalAlignment="Bottom" MinWidth="110" Margin="0,0,2,2"
                                  DataContext="{Binding LoadTreeButtonViewModel}"
                                  Command="{Binding SelectedItem.Command}"
                                  ItemsSource="{Binding Items}"
                                  SelectedItem="{Binding SelectedItem}"
                                  DisplayMemberPath="Title"/>
        </Grid>
    </Grid>
</controls:MetroWindow>
